name: Docker Build, Push & Sign with Cosign

on:
  push:
    branches:
      - main
    paths:
      - '*.html'
      - 'Dockerfile'
      - 'images/**'
      - '.github/workflows/**'
    paths-ignore:
      - '**/*.md'
      - '**/*.MD'
  pull_request:
    branches:
      - main
    paths:
      - '*.html'
      - 'Dockerfile'
      - 'images/**'
      - '.github/workflows/**'
    paths-ignore:
      - '**/*.md'
      - '**/*.MD'

env:
  REGISTRY: registry.dev.sudoconsultants.com
  PROJECT_NAME: cosign
  IMAGE_NAME: docker-cosign-demo

jobs:
  docker-build-sign:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # Required for Cosign OIDC signing
      packages: write  # Required for pushing images
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.10.0
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Harbor Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ vars.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.PROJECT_NAME }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Sign the Docker images with Cosign
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          echo "Signing images with digest: $DIGEST"
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          echo "Images to sign: $images"
          cosign sign --yes ${images}
